{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","props","state","nameinput","sLat","sLong","error","errortxt","handleSubmit","bind","handleChange","writeDataBase","setPos","prepareData","event","this","preventDefault","setState","target","value","position","coords","latitude","longitude","errottxt","navigator","geolocation","alert","getCurrentPosition","context","collection","add","first","last","lat","long","then","docRef","console","log","id","catch","className","Helmet","Container","Jumbotron","Form","onSubmit","Group","controlId","type","onClick","Label","Control","aria-label","size","name","onChange","disabled","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5994ed8.chunk.js","sourcesContent":["// src/firebase.js\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n//firebase\nconst config = {\n    apiKey: \"AIzaSyDK3k50MfL9rxfGi0uqKql5GaAgFMr4ajU\",\n    authDomain: \"geosynth-39a78.firebaseapp.com\",\n    databaseURL: \"https://geosynth-39a78.firebaseio.com\",\n    projectId: \"geosynth-39a78\",\n    storageBucket: \"geosynth-39a78.appspot.com\",\n    messagingSenderId: \"1048064109355\",\n    appId: \"1:1048064109355:web:6e6a484c2c77b17473f36e\"\n  };\n  \n  // Initialize Firebase\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nexport default db;","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\n// import isValidDate from './js/functions.js';\n\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nimport './App.css';\nimport db from './firebase.js';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nameinput: \"default\",\n      sLat: 0.0,\n      sLong:0.0,\n      error: false,\n      errortxt: \" \",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.writeDataBase = this.writeDataBase.bind(this);\n    this.setPos = this.setPos.bind(this);\n    this.prepareData = this.prepareData.bind(this);\n    this.writeDataBase = this.writeDataBase.bind(this);\n  } \n\n  handleSubmit(event) {\n    this.writeDataBase();\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({nameinput: event.target.value});\n  }\n  \n  setPos(position) {\n\n    this.setState({errortxt:\" \"});\n    this.setState({error:true});\n    this.setState({\n      sLat: position.coords.latitude,\n      sLong: position.coords.longitude,\n      errottxt:\"\",\n    })\n  }\n\n  prepareData(){\n    this.setState({errortxt:\"getting from local browser...\"});\n    if (!navigator.geolocation) {\n      alert(\"navigator.geolocation is not available\");\n    }\n    navigator.geolocation.getCurrentPosition(this.setPos);\n  }\n  \n  writeDataBase(){\n\n    var context = this;\n\n    db.collection(\"users\").add({\n      first: this.state.nameinput,\n      last: \"gitform\",\n      lat: this.state.sLat,\n      long: this.state.sLong\n    })\n    .then(function(docRef) {\n      context.setState({errortxt : \"Successfully added to database\"});\n      console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n      context.setState({errortxt: \"Error adding document\"});\n      console.error(\"Error adding document: \", error);\n    });\n\n  }\n  //\n  render() {\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <title>geo synth data collection</title>\n        </Helmet>\n        <Container className=\"p-3 text-left\">\n          <Jumbotron >\n            <div className=\"bodyNoBoot\">\n              <h1 className=\"font-weight-light\">\n                geo.synth v.1.0\n              </h1>\n              <h3 className=\"font-weight-light\">\n                A synthesiser that uses friends and families location data to create sounds.\n              </h3>\n              <p>\n                <strong>About</strong>\n                <br/><br/>\n                The geo.synth is a culmination of a few things; As an artist I have a latent compulsion to make work but during the pandemic I have a very ambiguos, dispersed, fractured 'audience', This is an attempt at an expression, a reaction to being 'locked down, to estranged relationships, to my sense of place being questioned, my sense of personal liberty being redefined..\n                <br/><br/>\n                As a musician/ tech-nerd I wanted to dive deeper into the world of music and code:  There has always been a rift between my commercial 'coder' and my personal 'artist' .  This is an attempt to heal that rift and learn more about the technologies invloved: Max/MSP, React.js, Node.js, p5.js and Firebase.\n                <br/><br/>\n                <strong>Data Collection</strong>\n                <br/><br/>\n                With this form I am attempting to collect data of users I know personally so I can develop a 'geo cluster' relative to me.  I would like to develop the idea further to include various different user 'clusters' and possibly work with the API's of other geo data apps, eg: running, cycling, walking..\n                <br/><br/>\n                If you would like to add your current lat/ long and a word to the synth please enter some text in the box and click send, the data will be held in a firebase database.  No other data is kept. If you want to preserve anonymity please use a nickname.  Please email me if you would like to remove it, or if you have any concerns about the data.\n                <br/><br/>\n                NSW 2021\n                <br/><br/>\n              </p>\n            </div>\n            <div>\n              <Form\n                onSubmit={this.handleSubmit}\n              >\n                <Form.Group \n                  controlId=\"formBasicTextInput\"\n                  > \n                    <div className=\"bodyNoBoot border m-2 p-2\">\n                      <div>\n                        Get the Lat Long Co-ordinates of this browser - only works in Chrome\n                      </div>\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <button\n                            className=\"btn btn-outline-secondary\" \n                            type=\"button\"\n                            onClick={this.prepareData}\n                          >\n                            Get Co-ordinates \n                          </button>\n                        </div>\n                        <div>\n                          {this.state.sLat} {this.state.sLong} \n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bodyNoBoot border m-2 p-2\">\n                      <Form.Label\n                        >Nick Name\n                      </Form.Label>\n                      <Form.Control \n                        type=\"text\"\n                        aria-label=\"name-input\"\n                        size=\"lg\"\n                        className=\"mb-4\"\n                        name=\"name1input\"\n                        value={this.state.nameinput}\n                        onChange={this.handleChange}\n                      />\n                      <input \n                        type=\"submit\" \n                        value=\"Submit\"\n                        disabled={!this.state.error}\n                      />\n                    </div>\n                    <div className=\"bodyNoBoot border m-2 p-2\">\n                        {this.state.errortxt}\n                    </div>\n                </Form.Group>\n              </Form>\n            </div>\n          </Jumbotron>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}